// HIVEMIND
// GENERATED PROTOBUF FILE

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: merged.proto

package hivemind

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AiSpeakerFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trigger           bool `protobuf:"varint,1,opt,name=trigger,proto3" json:"trigger,omitempty"`                     // 0: music off, 1: music on
	AskForReplacement bool `protobuf:"varint,2,opt,name=askForReplacement,proto3" json:"askForReplacement,omitempty"` // 0: before or after asking for replacement, 1: asking for replacement
	Replacement       bool `protobuf:"varint,3,opt,name=replacement,proto3" json:"replacement,omitempty"`             // 0: do not replace, 1: replace with soundbar
}

func (x *AiSpeakerFrame) Reset() {
	*x = AiSpeakerFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merged_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AiSpeakerFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AiSpeakerFrame) ProtoMessage() {}

func (x *AiSpeakerFrame) ProtoReflect() protoreflect.Message {
	mi := &file_merged_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AiSpeakerFrame.ProtoReflect.Descriptor instead.
func (*AiSpeakerFrame) Descriptor() ([]byte, []int) {
	return file_merged_proto_rawDescGZIP(), []int{0}
}

func (x *AiSpeakerFrame) GetTrigger() bool {
	if x != nil {
		return x.Trigger
	}
	return false
}

func (x *AiSpeakerFrame) GetAskForReplacement() bool {
	if x != nil {
		return x.AskForReplacement
	}
	return false
}

func (x *AiSpeakerFrame) GetReplacement() bool {
	if x != nil {
		return x.Replacement
	}
	return false
}

type AiSpeakerRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *AiSpeakerRes) Reset() {
	*x = AiSpeakerRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merged_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AiSpeakerRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AiSpeakerRes) ProtoMessage() {}

func (x *AiSpeakerRes) ProtoReflect() protoreflect.Message {
	mi := &file_merged_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AiSpeakerRes.ProtoReflect.Descriptor instead.
func (*AiSpeakerRes) Descriptor() ([]byte, []int) {
	return file_merged_proto_rawDescGZIP(), []int{1}
}

func (x *AiSpeakerRes) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *AiSpeakerRes) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type AirconFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trigger bool `protobuf:"varint,1,opt,name=trigger,proto3" json:"trigger,omitempty"` // 0: off / 1: on
	// modeCooling(냉방)
	// modeEco(절전)
	// modeDry(자동 건조)
	// modeSleep(열대야 취침)
	// modePowerCooling(쿨파워)
	// modeFan(송풍)
	// modePurify(청정)
	// modeSmartCare(스마트케어)
	Mode               string `protobuf:"bytes,2,opt,name=mode,proto3" json:"mode,omitempty"`
	AirflowDirect      bool   `protobuf:"varint,3,opt,name=airflowDirect,proto3" json:"airflowDirect,omitempty"` // 0: indirect airflow(간접 바람) / 1: direct airflow(직접 바람)
	FanSpeed           int64  `protobuf:"varint,4,opt,name=fanSpeed,proto3" json:"fanSpeed,omitempty"`
	BrightnessScreen   int64  `protobuf:"varint,5,opt,name=brightnessScreen,proto3" json:"brightnessScreen,omitempty"`
	ObjTemperature     int64  `protobuf:"varint,6,opt,name=objTemperature,proto3" json:"objTemperature,omitempty"` // user set temperature
	StartWakeupTimer   bool   `protobuf:"varint,7,opt,name=startWakeupTimer,proto3" json:"startWakeupTimer,omitempty"`
	StartShutdownTimer bool   `protobuf:"varint,8,opt,name=startShutdownTimer,proto3" json:"startShutdownTimer,omitempty"`
	StopWakeupTimer    bool   `protobuf:"varint,9,opt,name=stopWakeupTimer,proto3" json:"stopWakeupTimer,omitempty"`
	StopShutdownTimer  bool   `protobuf:"varint,10,opt,name=stopShutdownTimer,proto3" json:"stopShutdownTimer,omitempty"`
	WakeupTime         int64  `protobuf:"varint,11,opt,name=wakeupTime,proto3" json:"wakeupTime,omitempty"`
	ShutdownTime       int64  `protobuf:"varint,12,opt,name=shutdownTime,proto3" json:"shutdownTime,omitempty"`
}

func (x *AirconFrame) Reset() {
	*x = AirconFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merged_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AirconFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AirconFrame) ProtoMessage() {}

func (x *AirconFrame) ProtoReflect() protoreflect.Message {
	mi := &file_merged_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AirconFrame.ProtoReflect.Descriptor instead.
func (*AirconFrame) Descriptor() ([]byte, []int) {
	return file_merged_proto_rawDescGZIP(), []int{2}
}

func (x *AirconFrame) GetTrigger() bool {
	if x != nil {
		return x.Trigger
	}
	return false
}

func (x *AirconFrame) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *AirconFrame) GetAirflowDirect() bool {
	if x != nil {
		return x.AirflowDirect
	}
	return false
}

func (x *AirconFrame) GetFanSpeed() int64 {
	if x != nil {
		return x.FanSpeed
	}
	return 0
}

func (x *AirconFrame) GetBrightnessScreen() int64 {
	if x != nil {
		return x.BrightnessScreen
	}
	return 0
}

func (x *AirconFrame) GetObjTemperature() int64 {
	if x != nil {
		return x.ObjTemperature
	}
	return 0
}

func (x *AirconFrame) GetStartWakeupTimer() bool {
	if x != nil {
		return x.StartWakeupTimer
	}
	return false
}

func (x *AirconFrame) GetStartShutdownTimer() bool {
	if x != nil {
		return x.StartShutdownTimer
	}
	return false
}

func (x *AirconFrame) GetStopWakeupTimer() bool {
	if x != nil {
		return x.StopWakeupTimer
	}
	return false
}

func (x *AirconFrame) GetStopShutdownTimer() bool {
	if x != nil {
		return x.StopShutdownTimer
	}
	return false
}

func (x *AirconFrame) GetWakeupTime() int64 {
	if x != nil {
		return x.WakeupTime
	}
	return 0
}

func (x *AirconFrame) GetShutdownTime() int64 {
	if x != nil {
		return x.ShutdownTime
	}
	return 0
}

type AirconRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *AirconRes) Reset() {
	*x = AirconRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merged_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AirconRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AirconRes) ProtoMessage() {}

func (x *AirconRes) ProtoReflect() protoreflect.Message {
	mi := &file_merged_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AirconRes.ProtoReflect.Descriptor instead.
func (*AirconRes) Descriptor() ([]byte, []int) {
	return file_merged_proto_rawDescGZIP(), []int{3}
}

func (x *AirconRes) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *AirconRes) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CurtainFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsHorizontal bool `protobuf:"varint,1,opt,name=isHorizontal,proto3" json:"isHorizontal,omitempty"` // 0: vertical, 1: horizontal
	IsCenterMode bool `protobuf:"varint,2,opt,name=isCenterMode,proto3" json:"isCenterMode,omitempty"` // 0: side to side mode, 1: center mode
	// 0 & horizontal: opened from right / 1 & horizontal: opened from left
	// 0 & vertical: opened from down / 1 & vertical: opened from top
	IsLeftOrTop bool  `protobuf:"varint,3,opt,name=isLeftOrTop,proto3" json:"isLeftOrTop,omitempty"`
	Degree      int64 `protobuf:"varint,4,opt,name=degree,proto3" json:"degree,omitempty"` // 0 - 100: how much curtains are drawn
}

func (x *CurtainFrame) Reset() {
	*x = CurtainFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merged_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurtainFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurtainFrame) ProtoMessage() {}

func (x *CurtainFrame) ProtoReflect() protoreflect.Message {
	mi := &file_merged_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurtainFrame.ProtoReflect.Descriptor instead.
func (*CurtainFrame) Descriptor() ([]byte, []int) {
	return file_merged_proto_rawDescGZIP(), []int{4}
}

func (x *CurtainFrame) GetIsHorizontal() bool {
	if x != nil {
		return x.IsHorizontal
	}
	return false
}

func (x *CurtainFrame) GetIsCenterMode() bool {
	if x != nil {
		return x.IsCenterMode
	}
	return false
}

func (x *CurtainFrame) GetIsLeftOrTop() bool {
	if x != nil {
		return x.IsLeftOrTop
	}
	return false
}

func (x *CurtainFrame) GetDegree() int64 {
	if x != nil {
		return x.Degree
	}
	return 0
}

type CurtainRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CurtainRes) Reset() {
	*x = CurtainRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merged_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurtainRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurtainRes) ProtoMessage() {}

func (x *CurtainRes) ProtoReflect() protoreflect.Message {
	mi := &file_merged_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurtainRes.ProtoReflect.Descriptor instead.
func (*CurtainRes) Descriptor() ([]byte, []int) {
	return file_merged_proto_rawDescGZIP(), []int{5}
}

func (x *CurtainRes) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CurtainRes) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type LightBulbFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trigger bool   `protobuf:"varint,1,opt,name=trigger,proto3" json:"trigger,omitempty"` //* true: on, false: off
	Degree  int64  `protobuf:"varint,2,opt,name=degree,proto3" json:"degree,omitempty"`
	Color   string `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *LightBulbFrame) Reset() {
	*x = LightBulbFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merged_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LightBulbFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightBulbFrame) ProtoMessage() {}

func (x *LightBulbFrame) ProtoReflect() protoreflect.Message {
	mi := &file_merged_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightBulbFrame.ProtoReflect.Descriptor instead.
func (*LightBulbFrame) Descriptor() ([]byte, []int) {
	return file_merged_proto_rawDescGZIP(), []int{6}
}

func (x *LightBulbFrame) GetTrigger() bool {
	if x != nil {
		return x.Trigger
	}
	return false
}

func (x *LightBulbFrame) GetDegree() int64 {
	if x != nil {
		return x.Degree
	}
	return 0
}

func (x *LightBulbFrame) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type LightBulbRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *LightBulbRes) Reset() {
	*x = LightBulbRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merged_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LightBulbRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightBulbRes) ProtoMessage() {}

func (x *LightBulbRes) ProtoReflect() protoreflect.Message {
	mi := &file_merged_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightBulbRes.ProtoReflect.Descriptor instead.
func (*LightBulbRes) Descriptor() ([]byte, []int) {
	return file_merged_proto_rawDescGZIP(), []int{7}
}

func (x *LightBulbRes) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *LightBulbRes) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type MassageChairFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trigger bool `protobuf:"varint,1,opt,name=trigger,proto3" json:"trigger,omitempty"` // 0: music off, 1: music on
}

func (x *MassageChairFrame) Reset() {
	*x = MassageChairFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merged_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MassageChairFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MassageChairFrame) ProtoMessage() {}

func (x *MassageChairFrame) ProtoReflect() protoreflect.Message {
	mi := &file_merged_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MassageChairFrame.ProtoReflect.Descriptor instead.
func (*MassageChairFrame) Descriptor() ([]byte, []int) {
	return file_merged_proto_rawDescGZIP(), []int{8}
}

func (x *MassageChairFrame) GetTrigger() bool {
	if x != nil {
		return x.Trigger
	}
	return false
}

type MassageChairRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *MassageChairRes) Reset() {
	*x = MassageChairRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merged_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MassageChairRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MassageChairRes) ProtoMessage() {}

func (x *MassageChairRes) ProtoReflect() protoreflect.Message {
	mi := &file_merged_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MassageChairRes.ProtoReflect.Descriptor instead.
func (*MassageChairRes) Descriptor() ([]byte, []int) {
	return file_merged_proto_rawDescGZIP(), []int{9}
}

func (x *MassageChairRes) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *MassageChairRes) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type RefrigeratorFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trigger bool `protobuf:"varint,1,opt,name=trigger,proto3" json:"trigger,omitempty"` // 0: off, 1: on
}

func (x *RefrigeratorFrame) Reset() {
	*x = RefrigeratorFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merged_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefrigeratorFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefrigeratorFrame) ProtoMessage() {}

func (x *RefrigeratorFrame) ProtoReflect() protoreflect.Message {
	mi := &file_merged_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefrigeratorFrame.ProtoReflect.Descriptor instead.
func (*RefrigeratorFrame) Descriptor() ([]byte, []int) {
	return file_merged_proto_rawDescGZIP(), []int{10}
}

func (x *RefrigeratorFrame) GetTrigger() bool {
	if x != nil {
		return x.Trigger
	}
	return false
}

type RefrigeratorRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *RefrigeratorRes) Reset() {
	*x = RefrigeratorRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merged_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefrigeratorRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefrigeratorRes) ProtoMessage() {}

func (x *RefrigeratorRes) ProtoReflect() protoreflect.Message {
	mi := &file_merged_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefrigeratorRes.ProtoReflect.Descriptor instead.
func (*RefrigeratorRes) Descriptor() ([]byte, []int) {
	return file_merged_proto_rawDescGZIP(), []int{11}
}

func (x *RefrigeratorRes) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *RefrigeratorRes) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type SoundbarFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trigger bool `protobuf:"varint,1,opt,name=trigger,proto3" json:"trigger,omitempty"` // 0: music off, 1: music on
}

func (x *SoundbarFrame) Reset() {
	*x = SoundbarFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merged_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoundbarFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoundbarFrame) ProtoMessage() {}

func (x *SoundbarFrame) ProtoReflect() protoreflect.Message {
	mi := &file_merged_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoundbarFrame.ProtoReflect.Descriptor instead.
func (*SoundbarFrame) Descriptor() ([]byte, []int) {
	return file_merged_proto_rawDescGZIP(), []int{12}
}

func (x *SoundbarFrame) GetTrigger() bool {
	if x != nil {
		return x.Trigger
	}
	return false
}

type SoundbarRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SoundbarRes) Reset() {
	*x = SoundbarRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merged_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoundbarRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoundbarRes) ProtoMessage() {}

func (x *SoundbarRes) ProtoReflect() protoreflect.Message {
	mi := &file_merged_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoundbarRes.ProtoReflect.Descriptor instead.
func (*SoundbarRes) Descriptor() ([]byte, []int) {
	return file_merged_proto_rawDescGZIP(), []int{13}
}

func (x *SoundbarRes) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *SoundbarRes) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type TelevisionFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trigger bool `protobuf:"varint,1,opt,name=trigger,proto3" json:"trigger,omitempty"` // 0: music off, 1: music on
}

func (x *TelevisionFrame) Reset() {
	*x = TelevisionFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merged_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelevisionFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelevisionFrame) ProtoMessage() {}

func (x *TelevisionFrame) ProtoReflect() protoreflect.Message {
	mi := &file_merged_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelevisionFrame.ProtoReflect.Descriptor instead.
func (*TelevisionFrame) Descriptor() ([]byte, []int) {
	return file_merged_proto_rawDescGZIP(), []int{14}
}

func (x *TelevisionFrame) GetTrigger() bool {
	if x != nil {
		return x.Trigger
	}
	return false
}

type TelevisionRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *TelevisionRes) Reset() {
	*x = TelevisionRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merged_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelevisionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelevisionRes) ProtoMessage() {}

func (x *TelevisionRes) ProtoReflect() protoreflect.Message {
	mi := &file_merged_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelevisionRes.ProtoReflect.Descriptor instead.
func (*TelevisionRes) Descriptor() ([]byte, []int) {
	return file_merged_proto_rawDescGZIP(), []int{15}
}

func (x *TelevisionRes) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *TelevisionRes) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type WaterDispenserFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TriggerReminder bool `protobuf:"varint,1,opt,name=triggerReminder,proto3" json:"triggerReminder,omitempty"` // 0: before medication reminder / 1: after/during medication reminder
	TriggerWater    bool `protobuf:"varint,2,opt,name=triggerWater,proto3" json:"triggerWater,omitempty"`       // 0: water not dispensed 1: water dispensed
}

func (x *WaterDispenserFrame) Reset() {
	*x = WaterDispenserFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merged_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaterDispenserFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaterDispenserFrame) ProtoMessage() {}

func (x *WaterDispenserFrame) ProtoReflect() protoreflect.Message {
	mi := &file_merged_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaterDispenserFrame.ProtoReflect.Descriptor instead.
func (*WaterDispenserFrame) Descriptor() ([]byte, []int) {
	return file_merged_proto_rawDescGZIP(), []int{16}
}

func (x *WaterDispenserFrame) GetTriggerReminder() bool {
	if x != nil {
		return x.TriggerReminder
	}
	return false
}

func (x *WaterDispenserFrame) GetTriggerWater() bool {
	if x != nil {
		return x.TriggerWater
	}
	return false
}

type WaterDispenserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *WaterDispenserRes) Reset() {
	*x = WaterDispenserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merged_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaterDispenserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaterDispenserRes) ProtoMessage() {}

func (x *WaterDispenserRes) ProtoReflect() protoreflect.Message {
	mi := &file_merged_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaterDispenserRes.ProtoReflect.Descriptor instead.
func (*WaterDispenserRes) Descriptor() ([]byte, []int) {
	return file_merged_proto_rawDescGZIP(), []int{17}
}

func (x *WaterDispenserRes) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *WaterDispenserRes) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_merged_proto protoreflect.FileDescriptor

var file_merged_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x48, 0x4f, 0x4c, 0x4d, 0x45, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x7a,
	0x0a, 0x0e, 0x61, 0x69, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x73,
	0x6b, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x61, 0x73, 0x6b, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x72,
	0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x3c, 0x0a, 0x0c, 0x61, 0x69,
	0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xc9, 0x03, 0x0a, 0x0b, 0x61, 0x69, 0x72,
	0x63, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x69, 0x72, 0x66, 0x6c, 0x6f,
	0x77, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61,
	0x69, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x61, 0x6e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x66, 0x61, 0x6e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x62, 0x6a, 0x54, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x62,
	0x6a, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x57, 0x61, 0x6b, 0x65, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x57, 0x61, 0x6b,
	0x65, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x68, 0x75, 0x74, 0x64,
	0x6f, 0x77, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x70,
	0x57, 0x61, 0x6b, 0x65, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x73, 0x74, 0x6f, 0x70, 0x57, 0x61, 0x6b, 0x65, 0x75, 0x70, 0x54, 0x69, 0x6d,
	0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x74, 0x6f, 0x70, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f,
	0x77, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x73,
	0x74, 0x6f, 0x70, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x61, 0x6b, 0x65, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x77, 0x61, 0x6b, 0x65, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x09, 0x61, 0x69, 0x72, 0x63, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x90, 0x01, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f,
	0x6e, 0x74, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x4d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x43, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x4c, 0x65,
	0x66, 0x74, 0x4f, 0x72, 0x54, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69,
	0x73, 0x4c, 0x65, 0x66, 0x74, 0x4f, 0x72, 0x54, 0x6f, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x67, 0x72, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x67, 0x72,
	0x65, 0x65, 0x22, 0x3a, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x58,
	0x0a, 0x0e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x42, 0x75, 0x6c, 0x62, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x67, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x67, 0x72,
	0x65, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x3c, 0x0a, 0x0c, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x42, 0x75, 0x6c, 0x62, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x2d, 0x0a, 0x11, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x68, 0x61, 0x69, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x22, 0x3f, 0x0a, 0x0f, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x68, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x2d, 0x0a, 0x11, 0x72, 0x65, 0x66, 0x72, 0x69, 0x67,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x22, 0x3f, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x72, 0x69, 0x67, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x29, 0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x62,
	0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x22, 0x3b, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x62, 0x61, 0x72, 0x52, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x2b,
	0x0a, 0x0f, 0x74, 0x65, 0x6c, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x22, 0x3d, 0x0a, 0x0d, 0x74,
	0x65, 0x6c, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x63, 0x0a, 0x13, 0x77, 0x61,
	0x74, 0x65, 0x72, 0x44, 0x69, 0x73, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x69,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x57, 0x61, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x57, 0x61, 0x74, 0x65, 0x72, 0x22,
	0x41, 0x0a, 0x11, 0x77, 0x61, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73, 0x70, 0x65, 0x6e, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x32, 0x58, 0x0a, 0x09, 0x41, 0x69, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x12,
	0x4b, 0x0a, 0x0b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x2e, 0x48, 0x4f, 0x4c, 0x4d, 0x45, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x61, 0x69, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x1a, 0x1c,
	0x2e, 0x48, 0x4f, 0x4c, 0x4d, 0x45, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x61, 0x69, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x32, 0x4f, 0x0a, 0x06,
	0x41, 0x69, 0x72, 0x63, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x0b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x2e, 0x48, 0x4f, 0x4c, 0x4d, 0x45, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x69, 0x72, 0x63, 0x6f, 0x6e, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x1a, 0x19, 0x2e, 0x48, 0x4f, 0x4c, 0x4d, 0x45, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x61, 0x69, 0x72, 0x63, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x32, 0x52, 0x0a,
	0x07, 0x43, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x12, 0x47, 0x0a, 0x0b, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x2e, 0x48, 0x4f, 0x4c, 0x4d, 0x45, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x1a, 0x1a, 0x2e, 0x48, 0x4f, 0x4c, 0x4d, 0x45, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x32, 0x58, 0x0a, 0x09, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x42, 0x75, 0x6c, 0x62, 0x12, 0x4b,
	0x0a, 0x0b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x2e,
	0x48, 0x4f, 0x4c, 0x4d, 0x45, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x42, 0x75, 0x6c, 0x62, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x1a, 0x1c, 0x2e,
	0x48, 0x4f, 0x4c, 0x4d, 0x45, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x42, 0x75, 0x6c, 0x62, 0x52, 0x65, 0x73, 0x32, 0x61, 0x0a, 0x0c, 0x4d,
	0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x72, 0x12, 0x51, 0x0a, 0x0b, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x2e, 0x48, 0x4f, 0x4c,
	0x4d, 0x45, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x1a, 0x1f, 0x2e,
	0x48, 0x4f, 0x4c, 0x4d, 0x45, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x32, 0x61,
	0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x69, 0x67, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x51,
	0x0a, 0x0b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x2e,
	0x48, 0x4f, 0x4c, 0x4d, 0x45, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x72,
	0x65, 0x66, 0x72, 0x69, 0x67, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x1a, 0x1f, 0x2e, 0x48, 0x4f, 0x4c, 0x4d, 0x45, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x72, 0x65, 0x66, 0x72, 0x69, 0x67, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x32, 0x55, 0x0a, 0x08, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x62, 0x61, 0x72, 0x12, 0x49, 0x0a,
	0x0b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x2e, 0x48,
	0x4f, 0x4c, 0x4d, 0x45, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x73, 0x6f,
	0x75, 0x6e, 0x64, 0x62, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x1a, 0x1b, 0x2e, 0x48, 0x4f,
	0x4c, 0x4d, 0x45, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x73, 0x6f, 0x75,
	0x6e, 0x64, 0x62, 0x61, 0x72, 0x52, 0x65, 0x73, 0x32, 0x5b, 0x0a, 0x0a, 0x54, 0x65, 0x6c, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x0b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x2e, 0x48, 0x4f, 0x4c, 0x4d, 0x45, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x1a, 0x1d, 0x2e, 0x48, 0x4f, 0x4c, 0x4d, 0x45, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x32, 0x67, 0x0a, 0x0e, 0x57, 0x61, 0x74, 0x65, 0x72, 0x44, 0x69,
	0x73, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x0b, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x2e, 0x48, 0x4f, 0x4c, 0x4d, 0x45, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x77, 0x61, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73,
	0x70, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x1a, 0x21, 0x2e, 0x48, 0x4f,
	0x4c, 0x4d, 0x45, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x77, 0x61, 0x74,
	0x65, 0x72, 0x44, 0x69, 0x73, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x42, 0x13,
	0x5a, 0x11, 0x73, 0x72, 0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x68, 0x69, 0x76, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_merged_proto_rawDescOnce sync.Once
	file_merged_proto_rawDescData = file_merged_proto_rawDesc
)

func file_merged_proto_rawDescGZIP() []byte {
	file_merged_proto_rawDescOnce.Do(func() {
		file_merged_proto_rawDescData = protoimpl.X.CompressGZIP(file_merged_proto_rawDescData)
	})
	return file_merged_proto_rawDescData
}

var file_merged_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_merged_proto_goTypes = []interface{}{
	(*AiSpeakerFrame)(nil),      // 0: HOLME_instance.aiSpeakerFrame
	(*AiSpeakerRes)(nil),        // 1: HOLME_instance.aiSpeakerRes
	(*AirconFrame)(nil),         // 2: HOLME_instance.airconFrame
	(*AirconRes)(nil),           // 3: HOLME_instance.airconRes
	(*CurtainFrame)(nil),        // 4: HOLME_instance.curtainFrame
	(*CurtainRes)(nil),          // 5: HOLME_instance.curtainRes
	(*LightBulbFrame)(nil),      // 6: HOLME_instance.lightBulbFrame
	(*LightBulbRes)(nil),        // 7: HOLME_instance.lightBulbRes
	(*MassageChairFrame)(nil),   // 8: HOLME_instance.massageChairFrame
	(*MassageChairRes)(nil),     // 9: HOLME_instance.massageChairRes
	(*RefrigeratorFrame)(nil),   // 10: HOLME_instance.refrigeratorFrame
	(*RefrigeratorRes)(nil),     // 11: HOLME_instance.refrigeratorRes
	(*SoundbarFrame)(nil),       // 12: HOLME_instance.soundbarFrame
	(*SoundbarRes)(nil),         // 13: HOLME_instance.soundbarRes
	(*TelevisionFrame)(nil),     // 14: HOLME_instance.televisionFrame
	(*TelevisionRes)(nil),       // 15: HOLME_instance.televisionRes
	(*WaterDispenserFrame)(nil), // 16: HOLME_instance.waterDispenserFrame
	(*WaterDispenserRes)(nil),   // 17: HOLME_instance.waterDispenserRes
}
var file_merged_proto_depIdxs = []int32{
	0,  // 0: HOLME_instance.AiSpeaker.HandleFrame:input_type -> HOLME_instance.aiSpeakerFrame
	2,  // 1: HOLME_instance.Aircon.HandleFrame:input_type -> HOLME_instance.airconFrame
	4,  // 2: HOLME_instance.Curtain.HandleFrame:input_type -> HOLME_instance.curtainFrame
	6,  // 3: HOLME_instance.LightBulb.HandleFrame:input_type -> HOLME_instance.lightBulbFrame
	8,  // 4: HOLME_instance.MassageChair.HandleFrame:input_type -> HOLME_instance.massageChairFrame
	10, // 5: HOLME_instance.Refrigerator.HandleFrame:input_type -> HOLME_instance.refrigeratorFrame
	12, // 6: HOLME_instance.Soundbar.HandleFrame:input_type -> HOLME_instance.soundbarFrame
	14, // 7: HOLME_instance.Television.HandleFrame:input_type -> HOLME_instance.televisionFrame
	16, // 8: HOLME_instance.WaterDispenser.HandleFrame:input_type -> HOLME_instance.waterDispenserFrame
	1,  // 9: HOLME_instance.AiSpeaker.HandleFrame:output_type -> HOLME_instance.aiSpeakerRes
	3,  // 10: HOLME_instance.Aircon.HandleFrame:output_type -> HOLME_instance.airconRes
	5,  // 11: HOLME_instance.Curtain.HandleFrame:output_type -> HOLME_instance.curtainRes
	7,  // 12: HOLME_instance.LightBulb.HandleFrame:output_type -> HOLME_instance.lightBulbRes
	9,  // 13: HOLME_instance.MassageChair.HandleFrame:output_type -> HOLME_instance.massageChairRes
	11, // 14: HOLME_instance.Refrigerator.HandleFrame:output_type -> HOLME_instance.refrigeratorRes
	13, // 15: HOLME_instance.Soundbar.HandleFrame:output_type -> HOLME_instance.soundbarRes
	15, // 16: HOLME_instance.Television.HandleFrame:output_type -> HOLME_instance.televisionRes
	17, // 17: HOLME_instance.WaterDispenser.HandleFrame:output_type -> HOLME_instance.waterDispenserRes
	9,  // [9:18] is the sub-list for method output_type
	0,  // [0:9] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_merged_proto_init() }
func file_merged_proto_init() {
	if File_merged_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_merged_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AiSpeakerFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merged_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AiSpeakerRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merged_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AirconFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merged_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AirconRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merged_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurtainFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merged_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurtainRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merged_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LightBulbFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merged_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LightBulbRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merged_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MassageChairFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merged_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MassageChairRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merged_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefrigeratorFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merged_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefrigeratorRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merged_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoundbarFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merged_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoundbarRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merged_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelevisionFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merged_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelevisionRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merged_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaterDispenserFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merged_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaterDispenserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_merged_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   9,
		},
		GoTypes:           file_merged_proto_goTypes,
		DependencyIndexes: file_merged_proto_depIdxs,
		MessageInfos:      file_merged_proto_msgTypes,
	}.Build()
	File_merged_proto = out.File
	file_merged_proto_rawDesc = nil
	file_merged_proto_goTypes = nil
	file_merged_proto_depIdxs = nil
}
